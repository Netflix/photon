plugins {
    id 'nebula.netflixoss' version '8.8.1'
    id 'java'
    id 'pmd'
    id 'com.github.spotbugs' version "4.4.4"
    id 'jacoco'
}

group = 'com.netflix.photon'

repositories {
    mavenCentral()
    jcenter()
    /**
     * Following represents the location of SNAPSHOTS of RegXMLLib. It should be enabled only when
     * necessary to verify changes to the library that are not yet committed to Maven Central.
     */
    /*maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }*/
}

spotbugsMain {
    enabled = true
    excludeFilter = file("codequality/findbugs-excludeFilter-GeneratedCode.xml")
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
spotbugsTest {
    enabled = false
}

pmd {
    ignoreFailures = false
    ruleSets = [] // This overwrites the rules that are being added
    ruleSetFiles = files("${project.rootDir}/codequality/pmd/ruleset.xml")
}

sourceSets {
    main {
        java {
            srcDir 'generated'
        }
    }
}

javadoc {

    /**
     * Following suppresses creation of javadoc for auto-generated code
     */
    exclude "**/org/smpte_ra/schemas/**"
    exclude "**/org/w3/_2000/_09/xmldsig_/**"
}

dependencies {

    compileOnly "com.github.spotbugs:spotbugs-annotations:${spotbugs.toolVersion.get()}"
    implementation "org.slf4j:slf4j-api:1.7.+"
    implementation "org.slf4j:slf4j-log4j12:1.7.+"
    /**
     * Following includes the RegXMLLib dependency from Maven Central.
     */
    implementation "com.sandflow:regxmllib:1.1.3"
    /**
     * Following should be enabled and the above should be disabled
     * when necessary to verify changes to the RegXMLLib library that are
     * not yet committed to Maven Central.
     */
    /*compile "com.sandflow:regxmllib:${revRegXMLSNAPSHOT}"*/
    testImplementation "org.mockito:mockito-core:3.3+"
    testImplementation "org.testng:testng:7.+"
}

test {
    useTestNG()
    testLogging {
        events 'started', 'skipped', 'passed', 'failed'
    }
}

/**
 * This task should include all the dependencies as a part of the build process
 */
task getDependencies(type: Copy) {
  from sourceSets.main.runtimeClasspath
  into 'build/libs/'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

//Following line will enable including compile time dependencies as a part of the
//compile and build process.
//assemble.dependsOn getDependencies
