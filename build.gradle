plugins {
    id 'nebula.netflixoss' version '9.1.0' apply false
    id 'java'
    id 'pmd'
    id 'com.github.spotbugs' version "4.4.4"
    id 'jacoco'
}

if (project.hasProperty('dalet')) {
    apply plugin: 'maven-publish'

    publishing {
        publications {
            maven(MavenPublication) {
                group='com.dalet.imf'
                version='4.9.1'
                artifactId = 'Photon'
                
                from components.java
                
                pom {
                    licenses {
                        license {
                            name = 'The Apache Software License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                url "$System.env.NEXUS_URL" 
                credentials {
                    username "$System.env.NEXUS_USER"
                    password "$System.env.NEXUS_PASSORD"
                }
            }
        }
    }

    jar {
        manifest {
            attributes 'Implementation-Title': 'com.amberfin.photon#Photon;4.9.1'
            attributes 'Implementation-Version': '4.9.1'
            attributes 'Module-Origin': 'https://github.com/Netflix/photon.git'
            attributes 'Build-Date': new java.text.SimpleDateFormat('yyyy-MM-dd_HH:mm:ss').format(new Date())
            attributes 'Change': 'git rev-parse --short HEAD'.execute().text.trim()
            attributes 'Full-Change': 'git rev-parse HEAD'.execute().text.trim()
            attributes 'Branch': 'git branch --show-current'.execute().text.trim()
        }
    }

} else {
    apply plugin: 'nebula.netflixoss'
}

repositories {
    mavenCentral()
    /**
     * Following represents the location of SNAPSHOTS of RegXMLLib. It should be enabled only when
     * necessary to verify changes to the library that are not yet committed to Maven Central.
     */
    /*maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }*/
}

spotbugsMain {
    enabled = true
    excludeFilter = file("codequality/findbugs-excludeFilter-GeneratedCode.xml")
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
spotbugsTest {
    enabled = false
}

pmd {
    ignoreFailures = false
    ruleSets = [] // This overwrites the rules that are being added
    ruleSetFiles = files("${project.rootDir}/codequality/pmd/ruleset.xml")
}

sourceSets {
    main {
        java {
            srcDir 'generated'
        }
    }
}

javadoc {

    /**
     * Following suppresses creation of javadoc for auto-generated code
     */
    exclude "**/org/smpte_ra/schemas/**"
    exclude "**/org/w3/_2000/_09/xmldsig_/**"
}

dependencies {
    compileOnly "com.github.spotbugs:spotbugs-annotations:${spotbugs.toolVersion.get()}"
    implementation "org.slf4j:slf4j-api:1.7.30"
    implementation "org.slf4j:slf4j-log4j12:1.7.30"
    implementation "com.amazonaws:aws-java-sdk-bom:1.11.964"
    /**
     * Following includes the RegXMLLib dependency from Maven Central.
     */
    implementation "com.sandflow:regxmllib:1.1.3"
    implementation 'com.amazonaws:aws-java-sdk-s3:1.11.964'
    implementation 'com.amazonaws:aws-java-sdk-sts:1.11.964'
    /**
     * Following should be enabled and the above should be disabled
     * when necessary to verify changes to the RegXMLLib library that are
     * not yet committed to Maven Central.
     */
    /*compile "com.sandflow:regxmllib:${revRegXMLSNAPSHOT}"*/
    testImplementation "org.mockito:mockito-core:3.3+"
    testImplementation "org.testng:testng:7.+"
    testImplementation ("com.adobe.testing:s3mock:2.1.28") {
        exclude group: "ch.qos.logback"
    }
}

test {
    useTestNG()
    testLogging {
        events 'started', 'skipped', 'passed', 'failed'
    }
}

/**
 * This task should include all the dependencies as a part of the build process
 */
task getDependencies(type: Copy) {
  from sourceSets.main.runtimeClasspath
  into 'build/libs/'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

//Following line will enable including compile time dependencies as a part of the
//compile and build process.
//assemble.dependsOn getDependencies
